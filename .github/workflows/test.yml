# This is a basic workflow to help you get started with Actions
name: CI
# Controls when the workflow will run
on:
# Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "test" ]
  pull_request:
    branches: [ "test" ]
# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: null
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
# This workflow contains a single job called "build"
  build:
 # The type of runner that the job will run on
    runs-on: ubuntu-latest
# Steps represent a sequence of tasks that will be executed as part of the job
    steps:
 # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
 # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
# Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Run a multiple commands
        run: |
          pwd
          ls -la
          whoami
          date
      - name: install Terraform and AWS cli
        run: |
          sudo apt update
          sudo snap install terraform --classic
          terraform --version
          sudo snap install aws-cli --classic
          aws --version
      - name: Upload Artifacts To S3 Bucket
        env:
          AWS_AK_VALUE: ${{ secrets.VP_AWS_AK }}
          AWS_SK_VALUE: ${{ secrets.VP_AWS_SK }}
          AWS_REG_VALUE: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_AK_VALUE 
          aws configure set aws_secret_access_key $AWS_SK_VALUE 
          aws configure set region $AWS_REG_VALUE
          aws s3 ls
      - name: Execute Terraform commands
        env:
          AWS_AK_VALUE: ${{ secrets.VP_AWS_AK }}
          AWS_SK_VALUE: ${{ secrets.VP_AWS_SK }}
        run: |
          cd env/test/
          terraform init
          terraform fmt
          terraform validate
          terraform plan -var="aws_access_key=$AWS_AK_VALUE" -var="aws_secret_key=$AWS_SK_VALUE"
          terraform apply -auto-approve -var="aws_access_key=$AWS_AK_VALUE" -var="aws_secret_key=$AWS_SK_VALUE"
          terraform show
          terraform destroy -auto-approve -var="aws_access_key=$AWS_AK_VALUE" -var="aws_secret_key=$AWS_SK_VALUE"
          terraform show
